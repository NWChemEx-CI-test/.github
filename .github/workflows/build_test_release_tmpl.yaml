name: Build, test and test release 

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      clang-build:
        required: true
        type: boolean
      gcc-build:
        required: true
        type: boolean
      ninja_build:
        required: true
        type: boolean
      test:
        required: true
        type: boolean
      integration_test:
        required: true
        type: boolean
      install:
        required: true
        type: boolean
      base_image_tag:
        required: true
        type: string
      ref:
        required: false
        type: string
        default: ${{ github.ref }}
      cmake_version:
        required: false
        type: string
        default: 3.17.0
      gcc_version:
        required: false
        type: string
        default: 9
      clang_version:
        required: false
        type: string
        default: 11
      libfort_version:
        required: false
        type: string
        default: 0.4.2
      libint_version:
        required: false
        type: string
        default: 2.6.0
      depend_repos:
        required: false
        type: string
        default: ''
    secrets:
      CMAIZE_GITHUB_TOKEN:
        required: true
        #CONTAINER_REPO_TOKEN:
      DOCKER_PAT:
        required: true

jobs:
  Repo_name_lowcase:
    runs-on: ubuntu-latest
    outputs:
      lowcase_repo_name: ${{ steps.output-repo-name.outputs.repo_name }}
    steps:
    - name: Output repo name in lowcase
      id: output-repo-name
      run: |
        name=${{ inputs.repo }}
        echo "repo_name=${name,,}" >> "$GITHUB_OUTPUT"

  build-test-release-gcc:
    runs-on: ubuntu-latest
    needs: Repo_name_lowcase
    if: ${{inputs.gcc-build == true }}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PAT }}
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Build using GCC in a container
        uses: ./actions/container-build
        with: 
          btag: ${{ inputs.base_image_tag }}
          token: ${{ secrets.DOCKER_PAT }}
          user:  ${{ github.actor }}
          cmake_version: ${{ inputs.cmake_version }}
          gcc_version: ${{ inputs.gcc_version }}
          ninja_build: ${{ inputs.ninja_build }}
          use_clang: ${{ inputs.clang-build }}
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
          INSTALL: ${{ inputs.install }}
      - name: Test Application
        if: ${{inputs.test == true}}
        uses: NWChemEx-CI-test/.github/actions/image-test@master
        with: 
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
          integration_test: ${{ inputs.integration_test }}
      - name: Build the gcc release image and push
        if: ${{ inputs.install == true }}
        run: |
          cp -r /install ./
          docker build -t ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:gcc-latest -f Dockerfile/release.Dockerfile .
          docker push ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:gcc-latest
          
  build-test-release-clang:
    runs-on: ubuntu-latest
    needs: Repo_name_lowcase
    if: ${{inputs.clang-build == true}}
    container:
      image: ghcr.io/nwchemex-ci-test/building-image:clang-tmp
      credentials:
        username: ${{ github.actor }}
        #password: ${{ secrets.CONTAINER_REPO_TOKEN }}
        password: ${{ secrets.DOCKER_PAT }}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PAT }}
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Build using CLANG in a container
        uses: ./actions/container-build
        with:
          btag: ${{ inputs.base_image_tag }}
          token: ${{ secrets.DOCKER_PAT }}
          user:  ${{ github.actor }}
          cmake_version: ${{ inputs.cmake_version }}
          clang_version: ${{ inputs.clang_version }}
          ninja_build: ${{ inputs.ninja_build }}
          use_clang: ${{ inputs.clang-build }}
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
          INSTALL: ${{ inputs.install }}
      - name: Test Application
        if: ${{inputs.test == true}}
        uses: NWChemEx-CI-test/.github/actions/image-test@master
        with: 
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
          integration_test: ${{ inputs.integration_test }}
      - name: Build the clang release image and push
        if: ${{inputs.install == true}}
        run: |
          cp -r /install ./
          docker build -t ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:clang-latest -f Dockerfile/release.Dockerfile .
          docker push ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:clang-latest
