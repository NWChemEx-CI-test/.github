name: Build, test and test release in dev 

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      clang-build:
        required: true
        type: boolean
      gcc-build:
        required: true
        type: boolean
      ninja_build:
        required: true
        type: boolean
      test:
        required: true
        type: boolean
      integration_test:
        required: true
        type: boolean
      install:
        required: true
        type: boolean
      base_image_tag:
        required: true
        type: string
      depend_image_tag:
        required: false
        type: string
        default: stable
      ref:
        required: false
        type: string
        default: ${{ github.ref }}
      cmake_version:
        required: false
        type: string
        default: 3.17.0
      gcc_version:
        required: false
        type: string
        default: 9
      clang_version:
        required: false
        type: string
        default: 11
      libfort_version:
        required: false
        type: string
        default: 0.4.2
      libint_version:
        required: false
        type: string
        default: 2.6.0
      depend_repos:
        required: false
        type: string
        default: ''
    secrets:
      CMAIZE_GITHUB_TOKEN:
        required: true
        #CONTAINER_REPO_TOKEN:
      DOCKER_PAT:
        required: true

jobs:
  Repo_name_lowcase:
    runs-on: ubuntu-latest
    outputs:
      lowcase_repo_name: ${{ steps.output-repo-name.outputs.repo_name }}
    steps:
    - name: Output repo name in lowcase
      id: output-repo-name
      run: |
        name=${{ inputs.repo }}
        echo "repo_name=${name,,}" >> "$GITHUB_OUTPUT"
  Build:
    runs-on: ubuntu-latest
    needs: Repo_name_lowcase
    container:
      image: ghcr.io/nwchemex-ci-test/base_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:${{inputs.base_image_tag}}
      credentials:
        username: ${{ github.actor }}
        #password: ${{ secrets.CONTAINER_REPO_TOKEN }}
        password: ${{ secrets.DOCKER_PAT }}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Add dependent repos gcc
        if: ${{ inputs.depend_repos != '' && inputs.clang-build == false }}
        run: |
          IFS=" " read -r -a array <<< ${{inputs.depend_repos}}
          for element in "${array[@]}"
          do
            element=${element,,}
            drtag=${{ inputs.depend_image_tag }}
            docker pull ghcr.io/nwchemex-project/release_${element}:gcc-${drtag}
            img_id=$(docker create ghcr.io/nwchemex-project/release_${element}:gcc-${drtag})
            docker cp $img_id:/install /install
            docker rm -v $img_id
          done
      - name: Add dependent repos clang
        if: ${{ inputs.depend_repos != '' && inputs.clang-build == true }}
        run: |
          IFS=" " read -r -a array <<< ${{inputs.depend_repos}}
          for element in "${array[@]}"
          do
            element=${element,,}
            drtag=${{ inputs.depend_image_tag }}
            docker pull ghcr.io/nwchemex-project/release_${element}:clang-${drtag}
            img_id=$(docker create ghcr.io/nwchemex-project/release_${element}:clang-${drtag})
            docker cp $img_id:/install /install
            docker rm -v $img_id
          done
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Build using Clang
        if: ${{inputs.clang-build == true}}
        env:
          cmake_version: ${{ inputs.cmake_version }}
          clang_version: ${{ inputs.clang_version }}
          ninja_build: ${{ inputs.ninja_build }}
        uses: NWChemEx-CI-test/.github/actions/image-build@master
        with: 
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
          INSTALL: ${{ inputs.install }}
      - name: Build using GCC
        if: ${{inputs.gcc-build == true}}
        env:
          cmake_version: ${{ inputs.cmake_version }}
          gcc_version: ${{ inputs.gcc_version }}
          ninja_build: ${{ inputs.ninja_build }}
        uses: NWChemEx-CI-test/.github/actions/image-build@master
        with: 
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
          INSTALL: ${{ inputs.install }}
      - name: Test Application
        if: ${{inputs.test == true}}
        uses: NWChemEx-CI-test/.github/actions/image-test@master
        with: 
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
          integration_test: ${{ inputs.integration_test }}
      - name: Build the gcc release image and push
        if: ${{inputs.gcc-build == true && inputs.install == true}}
        run: |
          cp -r /install ./
          #docker manifest inspect ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:test > /dev/null ; image_exist=$?
          #if [ $image_exist == 0 ]; then
          #   docker pull ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:test
          #   docker build -t ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:test --cache-from ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:test -f release.Dockerfile .
          #else
             docker build -t ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:gcc-latest -f release.Dockerfile .
             #fi
          docker push ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:gcc-latest
      - name: Build the clang release image and push
        if: ${{inputs.clang-build == true && inputs.install == true}}
        run: |
          cp -r /install ./
          docker build -t ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:clang-latest -f release.Dockerfile .
          docker push ghcr.io/nwchemex-ci-test/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}:clang-latest
          #- name: Extract metadata (tags, labels) for Docker
          #  if: ${{inputs.gcc-build == true && inputs.install == true}}
          #  id: meta
          #  uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          #  with:
          #          #images: ghcr.io/nwchemex-project/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}
          #    images: ghcr.io/yzhang-23/release_${{needs.Repo_name_lowcase.outputs.lowcase_repo_name}}
          #- name: Build the image and push
          #  if: ${{inputs.gcc-build == true && inputs.install == true}}
          #  uses: docker/build-push-action@v4
          #  with:
          #    context: .
          #    push: true
          #    tags: ${{ steps.meta.outputs.tags }}
          #    labels: ${{ steps.meta.outputs.labels }}
